name: Build & Deploy (Changed Services Only)

on:
  push:
    branches: [main]
    paths:
      - "food/**"
      - "mart/**"
      - "merchant/**"
      - "order_management/**"
      - "ride_management/**"
      - "driver/**"
      - "admin/**"
      - "Map_and_location_services/**"
      - "k8s/**"
      - ".github/workflows/deploy.yml"

jobs:
  changes:
    name: Detect changed services
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.filter.outputs.any }}
      food: ${{ steps.filter.outputs.food }}
      mart: ${{ steps.filter.outputs.mart }}
      merchant: ${{ steps.filter.outputs.merchant }}
      order_management: ${{ steps.filter.outputs.order_management }}
      ride_management: ${{ steps.filter.outputs.ride_management }}
      driver: ${{ steps.filter.outputs.driver }}
      admin: ${{ steps.filter.outputs.admin }}
      map_location: ${{ steps.filter.outputs.map_location }}
      k8s: ${{ steps.filter.outputs.k8s }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            food:                 'food/**'
            mart:                 'mart/**'
            merchant:             'merchant/**'
            order_management:     'order_management/**'
            ride_management:      'ride_management/**'
            driver:               'driver/**'
            admin:                'admin/**'
            map_location:         'Map_and_location_services/**'
            k8s:                  'k8s/**'
            any:
              - 'food/**'
              - 'mart/**'
              - 'merchant/**'
              - 'order_management/**'
              - 'ride_management/**'
              - 'driver/**'
              - 'admin/**'
              - 'Map_and_location_services/**'
              - 'k8s/**'

  build:
    name: Build & push changed images
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.any == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Food
        if: needs.changes.outputs.food == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./food
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-food:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-food:${{ github.sha }}

      - name: Build & push Mart
        if: needs.changes.outputs.mart == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./mart
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-mart:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-mart:${{ github.sha }}

      - name: Build & push Merchant
        if: needs.changes.outputs.merchant == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./merchant
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-merchant:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-merchant:${{ github.sha }}

      - name: Build & push Order Management
        if: needs.changes.outputs.order_management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./order_management
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-order-management:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-order-management:${{ github.sha }}

      - name: Build & push Ride Management
        if: needs.changes.outputs.ride_management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./ride_management
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:${{ github.sha }}

      - name: Build & push Driver
        if: needs.changes.outputs.driver == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./driver
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-driver:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-driver:${{ github.sha }}

      - name: Build & push Admin
        if: needs.changes.outputs.admin == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./admin
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-admin:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-admin:${{ github.sha }}

      - name: Build & push Map & Location Services
        if: needs.changes.outputs.map_location == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./Map_and_location_services
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:${{ github.sha }}

  deploy:
    name: Deploy changed services to k3s (prod)
    runs-on: self-hosted
    needs: [changes, build]
    if: needs.changes.outputs.any == 'true'
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      NAMESPACE: prod
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      SHA: ${{ github.sha }}
      FOOD_CHANGED: ${{ needs.changes.outputs.food }}
      MART_CHANGED: ${{ needs.changes.outputs.mart }}
      MERCHANT_CHANGED: ${{ needs.changes.outputs.merchant }}
      ORDER_CHANGED: ${{ needs.changes.outputs.order_management }}
      RIDE_CHANGED: ${{ needs.changes.outputs.ride_management }}
      DRIVER_CHANGED: ${{ needs.changes.outputs.driver }}
      ADMIN_CHANGED: ${{ needs.changes.outputs.admin }}
      MAP_CHANGED: ${{ needs.changes.outputs.map_location }}
      K8S_CHANGED: ${{ needs.changes.outputs.k8s }}
    steps:
      - uses: actions/checkout@v4

      - name: Apply manifests (only if k8s/ changed)
        if: env.K8S_CHANGED == 'true'
        run: |
          set -euo pipefail
          kubectl apply -f k8s/
          kubectl -n "${NAMESPACE}" get ingress,svc,deploy -o wide || true

      - name: Deploy changed services
        shell: bash
        run: |
          set -euo pipefail

          echo "Deploying to namespace: ${NAMESPACE}"
          kubectl get nodes
          kubectl -n "${NAMESPACE}" get deploy -o name || true

          deploy_if_exists () {
            local name="$1"      # deployment name
            local container="$2" # container name
            local image="$3"     # image:tag
            if kubectl -n "${NAMESPACE}" get deploy/"${name}" >/dev/null 2>&1; then
              echo "Updating ${name} (${container}) -> ${image}"
              kubectl -n "${NAMESPACE}" set image deploy/"${name}" "${container}"="${image}"
              kubectl -n "${NAMESPACE}" rollout status deploy/"${name}" --timeout=180s
            else
              echo "WARN: deployment ${name} not found in ${NAMESPACE}, skipping."
            fi
          }

          # Call per changed flag
          [[ "${FOOD_CHANGED}"     == "true" ]] && deploy_if_exists food                 food                 "${DOCKER_USER}/superapp-food:${SHA}"
          [[ "${MART_CHANGED}"     == "true" ]] && deploy_if_exists mart                 mart                 "${DOCKER_USER}/superapp-mart:${SHA}"
          [[ "${MERCHANT_CHANGED}" == "true" ]] && deploy_if_exists merchant             merchant             "${DOCKER_USER}/superapp-merchant:${SHA}"
          [[ "${ORDER_CHANGED}"    == "true" ]] && deploy_if_exists order-management     order-management     "${DOCKER_USER}/superapp-order-management:${SHA}"
          [[ "${RIDE_CHANGED}"     == "true" ]] && deploy_if_exists ride-management      ride-management      "${DOCKER_USER}/superapp-ride-management:${SHA}"
          [[ "${DRIVER_CHANGED}"   == "true" ]] && deploy_if_exists driver               driver               "${DOCKER_USER}/superapp-driver:${SHA}"
          [[ "${ADMIN_CHANGED}"    == "true" ]] && deploy_if_exists admin                admin                "${DOCKER_USER}/superapp-admin:${SHA}"
          [[ "${MAP_CHANGED}"      == "true" ]] && deploy_if_exists map-location-services map-location-services "${DOCKER_USER}/superapp-map-location-services:${SHA}"
