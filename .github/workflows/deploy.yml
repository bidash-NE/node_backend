name: Build & Deploy (Changed Services Only)

on:
  push:
    branches: [main]
    # Only run this workflow when relevant paths change
    paths:
      - "food/**"
      - "mart/**"
      - "merchant/**"
      - "order_management/**"
      - "ride_management/**"
      - "driver/**"
      - "admin/**"
      - "Map_and_location_services/**"
      - "k8s/**"
      - ".github/workflows/deploy.yml"

jobs:
  changes:
    name: Detect changed services
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.filter.outputs.any }}
      food: ${{ steps.filter.outputs.food }}
      mart: ${{ steps.filter.outputs.mart }}
      merchant: ${{ steps.filter.outputs.merchant }}
      order_management: ${{ steps.filter.outputs.order_management }}
      ride_management: ${{ steps.filter.outputs.ride_management }}
      driver: ${{ steps.filter.outputs.driver }}
      admin: ${{ steps.filter.outputs.admin }}
      map_location: ${{ steps.filter.outputs.map_location }}
      k8s: ${{ steps.filter.outputs.k8s }}
    steps:
      - uses: actions/checkout@v4

      # Detect which folders changed in this push
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            food:                       'food/**'
            mart:                       'mart/**'
            merchant:                   'merchant/**'
            order_management:           'order_management/**'
            ride_management:            'ride_management/**'
            driver:                     'driver/**'
            admin:                      'admin/**'
            map_location:               'Map_and_location_services/**'
            k8s:                        'k8s/**'
            any:
              - 'food/**'
              - 'mart/**'
              - 'merchant/**'
              - 'order_management/**'
              - 'ride_management/**'
              - 'driver/**'
              - 'admin/**'
              - 'Map_and_location_services/**'
              - 'k8s/**'

  build:
    name: Build & push changed images
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.any == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & push only if that service changed.
      # We push two tags: :latest and :<git-sha> (immutable)
      - name: Build & push Food
        if: needs.changes.outputs.food == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./food
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-food:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-food:${{ github.sha }}

      - name: Build & push Mart
        if: needs.changes.outputs.mart == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./mart
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-mart:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-mart:${{ github.sha }}

      - name: Build & push Merchant
        if: needs.changes.outputs.merchant == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./merchant
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-merchant:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-merchant:${{ github.sha }}

      - name: Build & push Order Management
        if: needs.changes.outputs.order_management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./order_management
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-order-management:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-order-management:${{ github.sha }}

      - name: Build & push Ride Management
        if: needs.changes.outputs.ride_management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./ride_management
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:${{ github.sha }}

      - name: Build & push Driver
        if: needs.changes.outputs.driver == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./driver
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-driver:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-driver:${{ github.sha }}

      - name: Build & push Admin
        if: needs.changes.outputs.admin == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./admin
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-admin:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-admin:${{ github.sha }}

      - name: Build & push Map & Location Services
        if: needs.changes.outputs.map_location == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./Map_and_location_services
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:${{ github.sha }}

  deploy:
    name: Deploy changed services to k3s
    runs-on: ubuntu-latest
    needs: [changes, build]
    if: needs.changes.outputs.any == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0

      - name: Write kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          chmod 600 kubeconfig
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig

      # If k8s manifests changed, re-apply them (idempotent)
      - name: Apply manifests (if k8s/ changed)
        if: needs.changes.outputs.k8s == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: kubectl apply -f k8s/

      # Roll only the Deployments whose images changed.
      # We set the image to the immutable :<git-sha> tag to force rollout.
      - name: Deploy Food
        if: needs.changes.outputs.food == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/food food=${{ secrets.DOCKER_USERNAME }}/superapp-food:${{ github.sha }}
          kubectl -n superapp rollout status deploy/food

      - name: Deploy Mart
        if: needs.changes.outputs.mart == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/mart mart=${{ secrets.DOCKER_USERNAME }}/superapp-mart:${{ github.sha }}
          kubectl -n superapp rollout status deploy/mart

      - name: Deploy Merchant
        if: needs.changes.outputs.merchant == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/merchant merchant=${{ secrets.DOCKER_USERNAME }}/superapp-merchant:${{ github.sha }}
          kubectl -n superapp rollout status deploy/merchant

      - name: Deploy Order Management
        if: needs.changes.outputs.order_management == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/order-management order-management=${{ secrets.DOCKER_USERNAME }}/superapp-order-management:${{ github.sha }}
          kubectl -n superapp rollout status deploy/order-management

      - name: Deploy Ride Management
        if: needs.changes.outputs.ride_management == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/ride-management ride-management=${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:${{ github.sha }}
          kubectl -n superapp rollout status deploy/ride-management

      - name: Deploy Driver
        if: needs.changes.outputs.driver == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/driver driver=${{ secrets.DOCKER_USERNAME }}/superapp-driver:${{ github.sha }}
          kubectl -n superapp rollout status deploy/driver

      - name: Deploy Admin
        if: needs.changes.outputs.admin == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/admin admin=${{ secrets.DOCKER_USERNAME }}/superapp-admin:${{ github.sha }}
          kubectl -n superapp rollout status deploy/admin

      - name: Deploy Map & Location Services
        if: needs.changes.outputs.map_location == 'true'
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n superapp set image deploy/map-location-services map-location-services=${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:${{ github.sha }}
          kubectl -n superapp rollout status deploy/map-location-services
