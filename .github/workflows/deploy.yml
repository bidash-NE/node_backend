name: Build & Deploy (Changed Services Only)

on:
  push:
    branches: [main]
    paths:
      - "food/**"
      - "mart/**"
      - "merchant/**"
      - "order_management/**"
      - "ride_management/**"
      - "driver/**"
      - "admin/**"
      - "Map_and_location_services/**"
      - "k8s/**"
      - ".github/workflows/deploy.yml"

concurrency:
  group: deploy-main
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  changes:
    name: Detect changed services
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.filter.outputs.any }}
      any_images: ${{ steps.filter.outputs.any_images }}
      food: ${{ steps.filter.outputs.food }}
      mart: ${{ steps.filter.outputs.mart }}
      merchant: ${{ steps.filter.outputs.merchant }}
      order_management: ${{ steps.filter.outputs.order_management }}
      ride_management: ${{ steps.filter.outputs.ride_management }}
      driver: ${{ steps.filter.outputs.driver }}
      admin: ${{ steps.filter.outputs.admin }}
      map_location: ${{ steps.filter.outputs.map_location }}
      k8s: ${{ steps.filter.outputs.k8s }}
    steps:
      - uses: actions/checkout@v4
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            food:                 'food/**'
            mart:                 'mart/**'
            merchant:             'merchant/**'
            order_management:     'order_management/**'
            ride_management:      'ride_management/**'
            driver:               'driver/**'
            admin:                'admin/**'
            map_location:         'Map_and_location_services/**'
            k8s:                  'k8s/**'
            any_images:
              - 'food/**'
              - 'mart/**'
              - 'merchant/**'
              - 'order_management/**'
              - 'ride_management/**'
              - 'driver/**'
              - 'admin/**'
              - 'Map_and_location_services/**'
            any:
              - 'food/**'
              - 'mart/**'
              - 'merchant/**'
              - 'order_management/**'
              - 'ride_management/**'
              - 'driver/**'
              - 'admin/**'
              - 'Map_and_location_services/**'
              - 'k8s/**'

  build:
    name: Build & push changed images
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.any_images == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Food
        if: needs.changes.outputs.food == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./food
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-food:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-food:${{ github.sha }}

      - name: Build & push Mart
        if: needs.changes.outputs.mart == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./mart
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-mart:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-mart:${{ github.sha }}

      - name: Build & push Merchant
        if: needs.changes.outputs.merchant == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./merchant
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-merchant:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-merchant:${{ github.sha }}

      - name: Build & push Order Management
        if: needs.changes.outputs.order_management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./order_management
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-order-management:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-order-management:${{ github.sha }}

      - name: Build & push Ride Management
        if: needs.changes.outputs.ride_management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./ride_management
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-ride-management:${{ github.sha }}

      - name: Build & push Driver
        if: needs.changes.outputs.driver == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./driver
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-driver:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-driver:${{ github.sha }}

      - name: Build & push Admin
        if: needs.changes.outputs.admin == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./admin
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-admin:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-admin:${{ github.sha }}

      - name: Build & push Map & Location Services
        if: needs.changes.outputs.map_location == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./Map_and_location_services
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:latest
            ${{ secrets.DOCKER_USERNAME }}/superapp-map-location-services:${{ github.sha }}

  deploy:
    name: Deploy changed services to k3s (prod)
    runs-on: self-hosted # your runner on the k3s server (ip .33)
    needs: [changes, build]
    if: needs.changes.outputs.any == 'true'
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      NAMESPACE: prod
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      SHA: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Sanity check cluster
        run: |
          set -e
          kubectl get nodes
          kubectl get ns "${NAMESPACE}"

      - name: Apply manifests (if k8s/ changed)
        if: needs.changes.outputs.k8s == 'true'
        run: |
          set -e
          kubectl apply -f k8s/
          kubectl -n "${NAMESPACE}" get ingress,svc,deploy,pods -o wide

      - name: Deploy Food (if changed)
        if: needs.changes.outputs.food == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/food food="${DOCKER_USER}/superapp-food:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/food --timeout=180s

      - name: Deploy Mart (if changed)
        if: needs.changes.outputs.mart == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/mart mart="${DOCKER_USER}/superapp-mart:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/mart --timeout=180s

      - name: Deploy Merchant (if changed)
        if: needs.changes.outputs.merchant == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/merchant merchant="${DOCKER_USER}/superapp-merchant:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/merchant --timeout=180s

      - name: Deploy Order Management (if changed)
        if: needs.changes.outputs.order_management == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/order-management order-management="${DOCKER_USER}/superapp-order-management:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/order-management --timeout=180s

      - name: Deploy Ride Management (if changed)
        if: needs.changes.outputs.ride_management == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/ride-management ride-management="${DOCKER_USER}/superapp-ride-management:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/ride-management --timeout=180s

      - name: Deploy Driver (if changed)
        if: needs.changes.outputs.driver == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/driver driver="${DOCKER_USER}/superapp-driver:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/driver --timeout=180s

      - name: Deploy Admin (if changed)
        if: needs.changes.outputs.admin == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/admin admin="${DOCKER_USER}/superapp-admin:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/admin --timeout=180s

      - name: Deploy Map & Location Services (if changed)
        if: needs.changes.outputs.map_location == 'true'
        run: |
          set -e
          kubectl -n "${NAMESPACE}" set image deploy/map-location-services map-location-services="${DOCKER_USER}/superapp-map-location-services:${SHA}"
          kubectl -n "${NAMESPACE}" rollout status deploy/map-location-services --timeout=180s
